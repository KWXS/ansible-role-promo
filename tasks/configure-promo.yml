---
- name: Create work directory
  file:
    path: /Users/{{ work_user }}/{{ work_dir }}
    state: directory
    mode: 0777

- name: Clone TenantCloud promo project
  git:
    repo: "{{ promo_git }}"
    dest: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}
    version: "{{ promo_git_branch }}"
    force: true

- name: Copy and setup TenantCloud promo environment file
  copy:
    src: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env.example
    dest: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    remote_src: true

- name: Change APP_VERSION
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^APP_VERSION='
    line: 'APP_VERSION=local'

- name: Change APP_ENV
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^APP_ENV='
    line: 'APP_ENV=local'

- name: Add APP_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^APP_KEY='
    line: 'APP_KEY={{ app_key }}'

- name: Add APP_URL
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^APP_URL='
    line: 'APP_URL=http://www.{{ work_domain }}'

- name: Add BROADCAST_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^BROADCAST_DRIVER='
    line: 'BROADCAST_DRIVER=file'

- name: Change CACHE_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^CACHE_DRIVER='
    line: 'CACHE_DRIVER=file'

- name: Change SESSION_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: 'SESSION_DRIVER='
    line: 'SESSION_DRIVER=file'

- name: Change QUEUE_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: 'QUEUE_DRIVER='
    line: 'QUEUE_DRIVER=sync'

- name: Add HOST
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^HOST='
    line: 'HOST={{ work_domain }}'

- name: Add PUSHER_APP_ID
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_ID='
    line: 'PUSHER_APP_ID={{ pusher_app_id }}'

- name: Add PUSHER_APP_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_KEY='
    line: 'PUSHER_APP_KEY={{ pusher_app_key }}'

- name: Add PUSHER_APP_SECRET
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_SECRET='
    line: 'PUSHER_APP_SECRET={{ pusher_app_secret }}'

- name: Add PUSHER_APP_HOST
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_HOST='
    line: 'PUSHER_APP_HOST=127.0.0.1'

- name: Add PUSHER_APP_URL
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_URL='
    line: 'PUSHER_APP_URL=socket.{{ work_domain }}:9090'

- name: Add PUSHER_APP_PORT
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^PUSHER_APP_PORT='
    line: 'PUSHER_APP_PORT=6060'

- name: Add MAIL_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^MAIL_DRIVER='
    line: 'MAIL_DRIVER=smtp'

- name: Add MAIL_USERNAME
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^MAIL_USERNAME='
    line: '#MAIL_USERNAME=null'

- name: Add MAIL_PASSWORD
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^MAIL_PASSWORD='
    line: '#MAIL_PASSWORD=null'

- name: Change MAIL_ENCRYPTION
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^MAIL_ENCRYPTION='
    line: '#MAIL_ENCRYPTION=null'

- name: Add S3_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^S3_KEY='
    line: 'S3_KEY={{ minio_key }}'

- name: Add S3_SECRET_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^S3_SECRET_KEY='
    line: 'S3_SECRET_KEY={{ minio_secret }}'

- name: Add S3_BUCKET
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^S3_BUCKET='
    line: 'S3_BUCKET=local'

- name: Add S3_AWS_URL
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^S3_AWS_URL='
    line: 'S3_AWS_URL=https://home.{{ work_domain }}:9002'

- name: Add ZENCODER_API_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^ZENCODER_API_KEY='
    line: 'ZENCODER_API_KEY={{ zencoder_key }}'

- name: Add WEBHOOK_TOKEN
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^WEBHOOK_TOKEN='
    line: 'WEBHOOK_TOKEN={{ webhook_token }}'

- name: Change CATEGORY_CREATE_ENABLED
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^CATEGORY_CREATE_ENABLED='
    line: 'CATEGORY_CREATE_ENABLED=true'

- name: Add S3_MOBILE_REGION
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^S3_MOBILE_REGION='
    line: 'S3_MOBILE_REGION=us-east-1'

- name: Add RENTRANGE_API_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^RENTRANGE_API_KEY='
    line: 'RENTRANGE_API_KEY={{ rentrange_key }}'

- name: Add AWS_LAMBDA_ACCESS_KEY
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^AWS_LAMBDA_ACCESS_KEY='
    line: 'AWS_LAMBDA_ACCESS_KEY={{ aws_lambda_key }}'

- name: Add AWS_LAMBDA_ACCESS_SECRET
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^AWS_LAMBDA_ACCESS_SECRET='
    line: 'AWS_LAMBDA_ACCESS_SECRET={{ aws_lambda_secret }}'

- name: Add AWS_LAMBDA_REGION
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^AWS_LAMBDA_REGION='
    line: 'AWS_LAMBDA_REGION={{ aws_lambda_region }}'

- name: Add AWS_LAMBDA_S3
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^AWS_LAMBDA_S3='
    line: 'AWS_LAMBDA_S3={{ aws_lambda_s3 }}'

- name: Add CONVERTER_DRIVER
  lineinfile:
    path: /Users/{{ work_user }}/{{ work_dir }}/{{ promo_dir }}/.env
    regexp: '^CONVERTER_DRIVER='
    line: 'CONVERTER_DRIVER=lambda'
